#!/usr/bin/env ruby
require_relative '../lib/srl_ruby'

my_name = File.basename(__FILE__)
my_version = SrlRuby::VERSION
puts "#{my_name} v. #{my_version}"

# Parse the input expression in command-line
if ARGV.empty?
  msg = <<-MSG
  Simple Regex Language compiler:
  - Parses an SRL expression and displays the corresponding Regexp literal

  Command-line syntax (I):
  ========================
    #{my_name} "SRL expression"
    where:
      the SRL expression is enclosed between double quotes (")

    Examples:
    #{my_name} "letter from a to f exactly 4 times"
    #{my_name} "uppercase letter between 2 and 3 times"
    #{my_name} "digit from 0 to 7 once or more"

  Command-line syntax (II):
  ========================
    #{my_name} -f filename
    where:
      the filename is a text file containing the SRL expression to compile

    Examples:
    #{my_name} -f hexadecimal.srl
MSG
  puts msg
  exit(1)
end


if ARGV[0] =~ /^--?fi?l?e?$/
  srl_file = ARGV[1]
  result = SrlRuby.load_file(srl_file)
else
  srl_expr = ARGV[0]
  puts 'SRL input: ' + srl_expr
  result = SrlRuby.parse(srl_expr)
end

puts 'Resulting Regexp: /' + result.to_s + '/'


# End of file
